/* (c) https://github.com/MontiCore/monticore */
import de.monticore.MCTask
plugins {
  id 'java-library'
  id 'monticore'  version '7.1.0-SNAPSHOT' // MontiCore Plugin
}

group = "my.project"
version = '1.0.0-SNAPSHOT'

buildDir = file("$projectDir/target")
def mcversion  = '7.1.0-SNAPSHOT'
def se_commons_version = '7.1.1-SNAPSHOT'
def grammarName = 'Automata'
def outDir = "$buildDir/generated-sources/"

dependencies {
  implementation "de.monticore:monticore-runtime:$mcversion"
  implementation "de.monticore:monticore-grammar:$mcversion"
  grammar "de.monticore:monticore-grammar:$mcversion:grammars"
  implementation "de.se_rwth.commons:se-commons-utilities:$se_commons_version"
  testImplementation "junit:junit:4.13.1"
  testImplementation group:'ch.qos.logback', name: 'logback-classic', version: '1.1.2'
}

repositories {
  maven {
    url "https://nexus.se.rwth-aachen.de/content/groups/public"
  }
}

// configure non-standard source sets
sourceSets {
  main.java.srcDirs += [ outDir ]
}

task generate (type: MCTask) {
  grammar = file "src/main/grammars/${grammarName}.mc4"
  outputDir = file outDir
  outputs.upToDateWhen { incCheck("${grammarName}.mc4") }
}

compileJava {
  dependsOn project.collect { it.tasks.withType(MCTask) }
}


