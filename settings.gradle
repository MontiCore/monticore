// (c) https://github.com/MontiCore/monticore

/* (c) https://github.com/MontiCore/monticore */
pluginManagement {
  repositories {
    mavenCentral()
    if(("true").equals(getProperty('useLocalRepo'))){
      mavenLocal()
    }
    maven {
      credentials.username mavenUser
      credentials.password mavenPassword
      url repo
    }
  
    gradlePluginPortal()
  }
}

/*  # Output of MCTask contains absolute paths, so caching is disabled
boolean isCi = System.getenv().containsKey("CI")

buildCache {
  local {
    enabled = !isCi
  }
  remote(HttpBuildCache) {
    url = buildCacheURL
    allowInsecureProtocol = true  // TODO: https certificate for server!
    push = true // isCi
    credentials {
      username = buildCacheUser
      password = buildCachePassword
    }
  }
}
*/


rootProject.name = 'monticore'

boolean inComposite = gradle.parent != null
if(!hasProperty('bootstrap')) {
  if (!inComposite) {
    includeBuild('monticore-generator')
  }
}

if(!gradle.getGradleVersion().startsWith("6.")) {
  logger.error("Gradle " + gradle.getGradleVersion() + " used.\n" +
  "Gradle 6.X is required for this build. \n" +
  "You can download a different gradle version here: https://gradle.org/releases/\n" +
  "\n" +
  "The standard java compiler in gradle 7 takes rather long to build monticore. " +
  "In gradle 6.X it is possible to use the 'Eclipse Compiler for Java' (ecj). This dramatically reduces the compile time.\n"+
  "Aborting")
  System.exit(-1);
}

include(':monticore-runtime')
include(':monticore-grammar')
include(':monticore-runtime-emf')
include(':monticore-grammar-emf')

if(!hasProperty('bootstrap')) {
  include(':monticore-test:monticore-grammar-it')
  
  include(':monticore-test:it')
  
  include(':monticore-test:01experiments')
  project(':monticore-test:01experiments').projectDir = file("monticore-test/01.experiments")
  include(':monticore-test:01experiments:automaton')
  include(':monticore-test:01experiments:makeuse')
  include(':monticore-test:01experiments:builderAtm')
  include(':monticore-test:01experiments:ch17')
  include(':monticore-test:01experiments:codeChecks')
  include(':monticore-test:01experiments:composition')
  include(':monticore-test:01experiments:extensionvariants')
  include(':monticore-test:01experiments:forAst')
  include(':monticore-test:01experiments:forConcSt')
  include(':monticore-test:01experiments:forEmfAst')
  include(':monticore-test:01experiments:forMill')
  include(':monticore-test:01experiments:forParser')
  include(':monticore-test:01experiments:forVisitors')
  include(':monticore-test:01experiments:generator')
  include(':monticore-test:01experiments:glex')
  include(':monticore-test:01experiments:lexicalModes')
  include(':monticore-test:01experiments:patternAccess')
  include(':monticore-test:01experiments:questionnaire')
  include(':monticore-test:01experiments:S01_intro')
  include(':monticore-test:01experiments:scannerless')
  include(':monticore-test:01experiments:spaceOnOff-negative')
  include(':monticore-test:01experiments:spacesOffWithPositionCheck')
  include(':monticore-test:01experiments:stcomposition01')
  include(':monticore-test:01experiments:stcomposition02')
  include(':monticore-test:01experiments:stcomposition03')
  include(':monticore-test:01experiments:strules')
  include(':monticore-test:01experiments:visit_L_inherit')
  project(':monticore-test:01experiments:S01_intro').projectDir = file('monticore-test/01.experiments/S01.intro')
  project(':monticore-test:01experiments:visit_L_inherit').projectDir = file('monticore-test/01.experiments/visit.L.inherit')
  include ':monticore-test:01experiments:templates'
  include ':monticore-test:01experiments:hooks'
  include ':monticore-test:01experiments:textoutput'
  include ':monticore-test:01experiments:hwDeSers'
  include ':monticore-test:01experiments:skeleton'
  include ':monticore-test:01experiments:demonstrator'
  
  include ':monticore-test:02experiments'
  project(':monticore-test:02experiments').projectDir = file("monticore-test/02.experiments")
  
  include(':monticore-test:02experiments:scopes')
  include(':monticore-test:02experiments:unknownScopes')
  include(':monticore-test:02experiments:symbols')
  include(':monticore-test:02experiments:mcgrammarlang')
  include(':monticore-test:02experiments:forGrammarOps')
  include(':monticore-test:02experiments:parser')
  include(':monticore-test:02experiments:traverser')
  include(':monticore-test:02experiments:typecheck')
  include(':monticore-test:02experiments:forGradle')
  include(':monticore-test:02experiments:configTemplate')
  include(':monticore-test:02experiments:groovyHooks')

  include ':monticore-test:montitrans'
  project(':monticore-test:montitrans').projectDir = file("monticore-test/montitrans")
  include(':monticore-test:montitrans:test-dstl-gen')
  include(':monticore-test:montitrans:test-odrules')
  include(':monticore-test:montitrans:test-generated-dstls')

 // include 'example'
 // project(':example').projectDir = file("monticore-test/example")
}