/* (c) https://github.com/MontiCore/monticore */
package de.monticore.symbols;

/**
 * Common symbols for component-connector ADLs.
 */
component grammar CompSymbols extends de.monticore.symbols.BasicSymbols {

  interface scope symbol Component = Name;

  /**
   * Associations to add-ons are expressed as custom getters except parameters which require further configuration.
   */
  symbolrule Component =
    superComponents: de.monticore.types.check.CompKindExpression*
    refinements: de.monticore.types.check.CompKindExpression*

    method public List<de.monticore.symbols.basicsymbols._symboltable.TypeVarSymbol> getTypeParameters() {
      return this.getSpannedScope().getLocalTypeVarSymbols();
    }

    method public List<de.monticore.symbols.compsymbols._symboltable.PortSymbol> getPorts() {
      return this.getSpannedScope().getLocalPortSymbols();
    }

    /**
     * @return a List of the subcomponents of this component
     */
    method public List<de.monticore.symbols.compsymbols._symboltable.SubcomponentSymbol> getSubcomponents() {
      return this.getSpannedScope().getLocalSubcomponentSymbols();
    }
  ;

  interface symbol Subcomponent = Name;

  symbolrule Subcomponent =
    type: de.monticore.types.check.CompKindExpression
  ;

  interface symbol Port = Name;

  symbolrule Port =
    type: de.monticore.types.check.SymTypeExpression
    incoming: boolean
    outgoing: boolean
    timing: de.monticore.symbols.compsymbols._symboltable.Timing
    stronglyCausal: Boolean
  ;

}
