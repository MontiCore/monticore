package de.monticore;

component grammar InterfaceAttributes  extends mc.grammars.lexicals.TestLexicals {
      
   interface Prod;
   
    /** Used for embedding actions */
  external Action;
 
  ast Prod =
    Name ;
    
     interface ParserProd extends Prod;   
    
  MCGrammar =
    (["component"])? "grammar" Name       
   
      "{"
         (
              |
           LexProd
         |
           ClassProd
        
         )*
      "}" ;
      
  LexProd implements Prod =
    (["fragment"] | ["comment"]  )*
    ("token") Name
    (
      (
        ("{" initAction:Action "}")? // Statements
      |
        "{" initAction:Action "}"
      )?
         
      (":" ("{" endAction:Action  "}")? (variable:Name&
        ("->" type:Name+ (":" "{" block:Action "}" )? )? )? // Statements
      )? 
    )
    ";";
    
  ClassProd implements ParserProd =
    Name 
          
    ("{" Action "}")?    // Statements
  ";";

  ast ClassProd =
    method public String toString() { return name; } ;
 
 }
