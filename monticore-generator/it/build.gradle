import de.monticore.MCTask

plugins {
    id 'java'
    id "monticore" version "5.0.6.1"
}

group = 'de.monticore'
version = '5.0.6.1'
description = 'MontiCore Generator Main Integration Test'
sourceCompatibility = '1.8'

ext.grammarDir = 'src/main/grammars'
ext.grammar_version = '5.0.6.1'
ext.mc_version = '5.0.6.1'
ext.junit_version = '4.12'

configurations {grammar}

dependencies {
  implementation group:'de.monticore', name:'javaDSL', version:'4.3.17-SNAPSHOT'
  implementation group:'de.monticore', name:'monticore-runtime', version:grammar_version, force:true
  implementation group:'de.monticore', name:'monticore-grammar', version:grammar_version, force:true
  implementation group:'de.monticore', name:'monticore-generator', version:mc_version
  testImplementation group:'junit', name:'junit', version:junit_version
  grammar group:'de.monticore', name:'monticore-grammar', version:grammar_version, classifier:"grammars"
}

buildDir = file("$projectDir/target")
ext.outDir = "$buildDir/generated-sources/monticore/sourcecode"
sourceSets.main.java.srcDirs += [ outDir ]

if (!hasProperty('buildProfile')) ext.buildProfile = 'default'  // chooses the profile

apply from: "profile-${buildProfile}.gradle"  // includes the corresponding build file

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

compileJava {
  dependsOn project.collect { it.tasks.withType(MCTask) }
}

repositories {
  maven {
    credentials.username mavenUser
    credentials.password mavenPassword
    url repo
  }
  mavenLocal()
}