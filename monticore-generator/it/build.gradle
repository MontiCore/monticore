/* (c) https://github.com/MontiCore/monticore */
import de.monticore.MCTask

plugins {
  id 'java'
  id "monticore" version "6.0.0.1-SNAPSHOT"
}

group = 'de.monticore'
version = '6.0.0.1-SNAPSHOT'
description = 'MontiCore Generator Main Integration Test'
sourceCompatibility = '1.8'

ext.grammarDir = 'src/main/grammars'
ext.grammar_version = '6.0.0.1-SNAPSHOT'
ext.mc_version = '6.0.0.1-SNAPSHOT'
ext.junit_version = '4.12'

configurations {grammar}

dependencies {
  implementation group:'de.monticore', name:'javaDSL', version:'4.3.17-SNAPSHOT'
  implementation group:'de.monticore', name:'monticore-runtime', version:grammar_version
  implementation group:'de.monticore', name:'monticore-grammar', version:grammar_version
  implementation group:'de.monticore', name:'monticore-generator', version:mc_version
  testImplementation group:'junit', name:'junit', version:junit_version
  grammar group:'de.monticore', name:'monticore-grammar', version:grammar_version, classifier:"grammars"
}


if (!hasProperty('buildProfile')) ext.buildProfile = 'default'  // chooses the profile

apply from: "profile-${buildProfile}.gradle"  // includes the corresponding build file

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

compileJava {
  dependsOn project.collect { it.tasks.withType(MCTask) }
}

repositories {
  mavenLocal()
  maven {
    credentials.username mavenUser
    credentials.password mavenPassword
    url repo
  }
}

test {
  testLogging {
    showStandardStreams = true
  }
  
}
