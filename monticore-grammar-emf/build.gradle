/* (c) https://github.com/MontiCore/monticore */

plugins {
  id "java-library"
  id "de.monticore.generator" version "$version" // MontiCore Plugin
}

description = 'MontiCore: EMF Grammar'

sonarqube {
  skipProject = true
}

dependencies {
    api project(':monticore-runtime')
    api project(':monticore-runtime-emf')
    implementation "com.google.guava:guava:$guava_version"
    implementation "org.apache.commons:commons-lang3:$commons_lang3_version"
    implementation 'org.eclipse.emf:org.eclipse.emf.ecore:2.15.0'
    implementation 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.15.0'
    implementation 'org.eclipse.emf:org.eclipse.emf.common:2.15.0'
    testImplementation "junit:junit:$junit_version"
    testImplementation 'org.apache.groovy:groovy:4.0.2'
}

def srcDir = "$buildDir/main/java"
def testDir = "$buildDir/test/java"

task copySrc(type: Copy) {
  from "${project(':monticore-grammar').projectDir}/src/main/java"
  into srcDir
}

task copyTest(type: Copy) {
  from "${project(':monticore-grammar').projectDir}/src/test/java"
  into testDir
}

task copyTestResources(type: Copy) {
    from "${project(':monticore-grammar').projectDir}/src/test/resources"
    into "$buildDir/test/resources"
}

def grammarDir = "${project(':monticore-grammar').projectDir}/src/main/grammars"
def grammarOutDir = "$buildDir/generated-sources/monticore/sourcecode"
def testGrammarOutDir = "$buildDir/generated-test-sources/monticore/sourcecode"

sourceSets {
  main.java.srcDirs = [ srcDir]
  test.java.srcDirs = [ testDir, testGrammarOutDir]
}

task generate {}

generateMCGrammars {
  grammar.setFrom(file grammarDir)
  script = "de/monticore/monticore_emf.groovy"
  modelPath "${project(':monticore-grammar').projectDir}/src/main/grammars"
  handcodedPath srcDir
  dependsOn(copySrc, copyTest, copyTestResources)
}

def testGrammars = "${project(':monticore-grammar').projectDir}/src/test/grammars"
def exampleGrammars = "${project(':monticore-grammar').projectDir}/src/main/examples"

tasks.register("generateMCTestGrammars", de.monticore.gradle.gen.MCGenTask.class) {
  grammar.setFrom(file testGrammars)
  grammar.from(file exampleGrammars)
  outputDir = file testGrammarOutDir
  script = "de/monticore/monticore_emf.groovy"
  modelPath("$grammarDir", "${project(':monticore-grammar').projectDir}/src/test/grammars", "${project(':monticore-grammar').projectDir}/src/main/examples")
  handcodedPath(srcDir, testDir)
  dependsOn(copySrc, copyTest, copyTestResources)
}

test {
  exclude '**/CommentsOnASTTest.class'
  exclude '**/SwitchStatementValidTest.class'
  exclude '**/GrammarInheritanceCycleTest.class'
  exclude '**/GrammarNameEqualsFileNameTest.class'
  exclude '**/MCGrammarParserTest.class'
  exclude '**/MCGrammarPrettyPrinterTest.class'
  exclude '**/SynthesizeSymTypeFromMCBasicTypesTest.class'
  exclude '**/SynthesizeSymTypeFromMCCollectionTypesTest.class'
  exclude '**/SynthesizeSymTypeFromMCSimpleGenericTypesTest.class'
  exclude '**/SynthesizeSymTypeFromMCFullGenericTypesTest.class'
  exclude '**/SynthesizeSymTypeFromMCArrayTypesTest.class'
  exclude '**/MCType2SymTypeExpressionTest.class'
}


compileJava.dependsOn (tasks.named("copySrc"))
compileTestJava.dependsOn (tasks.named("copyTest"))
compileTestJava.dependsOn (tasks.named("copyTestResources"))
compileTestJava.dependsOn (tasks.named("generateMCTestGrammars"))
