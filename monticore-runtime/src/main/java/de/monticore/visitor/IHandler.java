/* (c) https://github.com/MontiCore/monticore */

/* generated from model BasicSymbols */
/* generated by template core.Interface*/

package de.monticore.visitor;


import de.monticore.ast.ASTNode;
import de.monticore.symboltable.IScope;
import de.monticore.symboltable.IScopeSpanningSymbol;
import de.monticore.symboltable.ISymbol;
import de.monticore.symboltable.SymbolWithScopeOfUnknownKind;

public interface IHandler {

  ITraverser getTraverser();

  default void handle(ASTNode node) {
    getTraverser().visit(node);
    getTraverser().endVisit(node);
  }

  default void handle(ISymbol symbol) {
    getTraverser().visit(symbol);
    getTraverser().endVisit(symbol);
  }

  default void handle(IScopeSpanningSymbol symbol) {
    getTraverser().visit(symbol);
    getTraverser().endVisit(symbol);
  }

  default void handle(IScope scope) {
    getTraverser().visit(scope);
    getTraverser().traverse(scope);
    getTraverser().endVisit(scope);
  }

  default void traverse(IScope scope) {
    for (SymbolWithScopeOfUnknownKind s : scope.getLocalUnknownSymbols()) {
      s.accept(getTraverser());
    }
  }

  default void handle(SymbolWithScopeOfUnknownKind symbol) {
    getTraverser().visit(symbol);
    getTraverser().traverse(symbol);
    getTraverser().endVisit(symbol);
  }

  default void traverse(SymbolWithScopeOfUnknownKind symbol) {}

}
